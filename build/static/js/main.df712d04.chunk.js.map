{"version":3,"sources":["images/logo.png","images/planet2.jpg","images/army2.jpg","containers/NavBarContainer.js","components/user/Login.js","components/user/Logout.js","components/Home.js","components/planet/PlanetList.js","containers/PlanetContainer.js","components/planet/PlanetDetail.js","components/planet/AddPlanet.js","components/planet/EditPlanet.js","components/garrison/GarrisonList.js","containers/GarrisonContainer.js","components/garrison/GarrisonDetail.js","components/garrison/AddGarrison.js","components/garrison/EditGarrison.js","containers/FooterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NavBarContainer","id","className","to","src","logo","alt","planet2","army2","React","Component","LOGIN_URL","Login","state","username","password","redirect","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","configObject","method","headers","Accept","body","JSON","stringify","console","log","fetch","then","resp","json","this","pathname","message","onSubmit","type","onChange","required","LOGOUT_URL","Home","props","history","location","exact","PlanetList","planetArray","map","planet","inhabitants","population","PlanetContainer","undefined","garrisonId","garrison_id","garrisonArray","chapter","size","sortedPlanetList","sortedPlanetArray","sort","planetA","planetB","toUpperCase","PLANET_URL","PlanetDetail","garrison","handleDelete","match","url","onClick","AddPlanet","createGarrisonSelect","list","step","disabled","defaultValue","hidden","EditPlanet","GarrisonList","GarrisonContainer","BASE_URL","GarrisonDetail","GARRISON_URL","AddGarrison","EditGarrison","FooterContainer","href","App","path","render","routerProps","component","Logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df712d04.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7a6f7eeb.png\";","export default __webpack_public_path__ + \"static/media/planet2.52d95c54.jpg\";","export default __webpack_public_path__ + \"static/media/army2.66695b41.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport planet2 from \"../images/planet2.jpg\";\nimport army2 from \"../images/army2.jpg\";\n\n\nexport default class NavBarContainer extends React.Component {\n  render() {\n    return (\n      <div id=\"navbar-container\">\n        <div id=\"brand\">\n          <Link className=\"menu-link\" to=\"/\">\n            <img src={logo} alt=\"Logo\" />\n            Home\n          </Link>\n        </div>\n        <div id=\"navbar-items\">\n        <Link className=\"menu-link\" to=\"/planets\">\n            <img src={planet2} alt=\"Planet Logo\" />\n            Planets\n          </Link>\n          <Link className=\"menu-link\" to=\"/garrisons\">\n            <img src={army2} alt=\"Garrison Logo\" />\n            Garrisons\n          </Link>\n          <div>Item3</div>\n        </div>\n        <div id=\"user-items\">\n          <Link className=\"menu-link\" to=\"/login\">\n            Login\n          </Link>\n          <Link className=\"menu-link\" to=\"/logout\">\n            Logout\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nconst LOGIN_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/login\";\n\nexport default class Login extends React.Component {\n  state = {\n    username: \"admin\",\n    password: \"admin\",\n    redirect: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /// need to clear form after\n    // Add redirect\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(LOGIN_URL, configObject)\n      .then((resp) => {\n        console.log(resp)  \n        resp.json()\n      })\n      .then((json) => {\n        console.log(json);  \n        this.setState({ redirect: true })\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: \"/\",\n        state: { message: \"Successfully Logged In!\" },\n      }}/>;\n    } else {\n      return (\n        <div className=\"login-container\">\n          <h2>User Login</h2>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                onChange={this.handleChange}\n                value={this.state.username}\n                required\n              />\n            </label>\n            <label>\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                onChange={this.handleChange}\n                value={this.state.password}\n                required\n              />\n            </label>\n            <button type=\"submit\">Login</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nconst LOGOUT_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/logout\";\n\nexport default class Login extends React.Component {\n  state = {\n    username: \"admin\",\n    password: \"admin\",\n    redirect: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /// need to clear form after\n    // Add redirect\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    };\n\n    fetch(LOGOUT_URL, configObject)\n      .then((resp) => {\n        console.log(resp)  \n        resp.json()\n      })\n      .then((json) => {\n        console.log(json)\n        this.setState({ redirect: true })\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={{\n        pathname: \"/\",\n        state: { message: \"Successfully Logged Out!\" },\n      }}/>;\n    } else {\n      return (\n        <div className=\"login-container\">\n          <h2>User Logout (Must Enter Username and Password)</h2>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                onChange={this.handleChange}\n                value={this.state.username}\n                required\n              />\n            </label>\n            <label>\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                onChange={this.handleChange}\n                value={this.state.password}\n                required\n              />\n            </label>\n            <button type=\"submit\">Logout</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport planet2 from \"../images/planet2.jpg\";\nimport army2 from \"../images/army2.jpg\";\n\nconst Home = (props) => {\n  return (\n    <div id=\"home-container\">\n      <h2 className=\"msgSuccess\">\n        {props.history.location.state\n          ? props.history.location.state.message\n          : \"\"}\n      </h2>\n      <h1>Welcome to Adeptus Administratum</h1>\n      <p>\n        The Adeptus Administratum is the administrative and bureaucratic heart\n        of the Imperium of Man, managing thousands of worlds, billions of\n        soldiers, and trillions of citizens.\n      </p>\n      <div id=\"menu-grid\">\n        <div id=\"menu1\">\n          <div>\n            <img src={planet2} alt=\"planet logo\" />\n            \n          </div>\n          <Link className=\"menu-link\" to=\"/planets\">\n          <h2>Manage Existing Planets</h2>\n          </Link>\n          <Link className=\"menu-link\" exact=\"true\" to=\"/planets/new\">\n          <h2>Add Planet</h2>\n          </Link>\n        </div>\n        <div id=\"menu2\">\n          <div>\n            <img src={army2} alt=\"army logo\" />\n            \n          </div>\n          <Link className=\"menu-link\" to=\"/garrisons\">\n          <h2>Manage Existing Garrisons</h2>\n          </Link>\n          <Link className=\"menu-link\" to=\"/garrisons/new\">\n          <h2>Add Garrison</h2>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst PlanetList = (props) => {\n  // console.log(\"props in planet list component planets: \", props.planetArray[0]);\n  // console.log(\"props in planet list component garrisons: \", props.garrisonArray[0]);\n  // console.log(\"garrison test: \", props.garrisonArray.find(garrison => garrison.id === props.planetArray[0].garrison_id));\n\n  return (\n    <table className=\"planet-table\">\n      <thead>\n        <tr>\n          <th>Planet ID</th>\n          <th>Planet Name</th>\n          <th>Inhabitants</th>\n          <th>Population</th>\n          <th>View Details</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        {props.planetArray.map((planet) => {\n          return (\n            <tr key={planet.id}>\n              <td>{planet.id}</td>\n              <td>{planet.name}</td>\n              <td>{planet.inhabitants}</td>\n              <td>{planet.population}</td>\n              <td><Link exact=\"true\" to={`/planets/${planet.id}`}>Get Planet Details</Link></td>\n              {/* For now... not working before fetch.  Plan to just display when clicking on planet for more detail... */}\n              {/* <td>{props.garrisonArray.find(garrison => garrison.id === props.planet.garrison_id)}</td> */}\n              {/* <td>{props.garrisonArray.find(garrison => garrison.id === props.planet.garrison_id).size || 0}</td> */}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PlanetList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import fetchPlanets from \"../actions/fetchPlanets\";\nimport PlanetList from \"../components/planet/PlanetList\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class PlanetContainer extends React.Component {\n  state = {\n    id: 0,\n    name: undefined,\n    inhabitants: undefined,\n    population: 0,\n    garrisonId: 0,\n    planetArray: [\n      {\n        id: 0,\n        name: \"\",\n        inhabitants: \"\",\n        population: 0,\n        garrison_id: 0,\n      },\n    ],\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: 0,\n      },\n    ],\n  };\n\n  componentDidMount() {\n    fetch(PLANET_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ planetArray: [...json] }, () =>\n          console.log(\"returned array from fetch: \", this.state.planetArray)\n        );\n      });\n  }\n\n  sortedPlanetList = () => {\n    const sortedPlanetArray = this.state.planetArray.sort(\n      (planetA, planetB) => {\n        if (planetA.name.toUpperCase() < planetB.name.toUpperCase()) {\n          return -1;\n        }\n        if (planetB.name.toUpperCase() < planetA.name.toUpperCase()) {\n          return 1;\n        }\n        return 0;\n      }\n    );\n    return <PlanetList planetArray={sortedPlanetArray} />;\n  };\n\n  render() {\n    return (\n      <div id=\"planet-container\">\n        <h1>All Planets in the Administratum</h1>\n        {this.sortedPlanetList()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = `http://52.53.150.109:8080/AdeptusAdministratum`;\n\nexport default class PlanetDetail extends React.Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrison: {\n      id: 0,\n      chapter: \"\",\n      size: 0,\n    },\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(PLANET_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        const garrison = {\n          id: json.garrison.id,\n          chapter: json.garrison.chapter,\n          size: json.garrison.size,\n        };\n        this.setState(\n          {\n            id: json.id,\n            name: json.name,\n            inhabitants: json.inhabitants,\n            population: json.population,\n            garrisonId: json.garrison_id,\n            garrison: { ...garrison },\n          },\n          () =>\n            console.log(\n              \"returned from fetch in PlanetDetail: \",\n              this.state,\n              this.props\n            )\n        );\n      });\n  }\n\n  handleDelete = () => {\n    const configObject = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    fetch(PLANET_URL + this.props.match.url, configObject).then((resp) =>\n      this.setState({ redirect: true })\n    );\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/planets\" />;\n    } else {\n      return (\n        <div id=\"planet-detail-container\">\n          <h2 className=\"msgSuccess\">\n            {this.props.history.location.state\n              ? this.props.history.location.state.message\n              : \"\"}\n          </h2>\n          <h1>Planet {this.state.name}</h1>\n          <p>Inhabitants: {this.state.inhabitants}</p>\n          <p>Population: {this.state.population}</p>\n          <p>Garrison Chapter: {this.state.garrison.chapter}</p>\n          <p>Garrison Size: {this.state.garrison.size}</p>\n          <Link to={`/planets/${this.state.id}/edit`}>\n            <button id=\"updateBtn\">Modify Planet Details</button>\n          </Link>\n          <button id=\"deleteBtn\" onClick={this.handleDelete}>\n            Delete Planet\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class AddPlanet extends React.Component {\n  state = {\n    id: 0,\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: \"\",\n      },\n    ],\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ garrisonArray: [...json] });\n      });\n  }\n\n  createGarrisonSelect = () => {\n    return this.state.garrisonArray.map((garrison) => {\n      return (\n        <option key={garrison.id} value={garrison.id}>\n          {garrison.chapter}\n        </option>\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        inhabitants: this.state.inhabitants,\n        population: this.state.population,\n        garrison_id: this.state.garrisonId,\n      }),\n    };\n\n    fetch(PLANET_URL, configObject)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({id: json.id, redirect: true})\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/planets/${this.state.id}`,\n            state: { message: \"Planet Successfully Created!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-planet-container\">\n          <h1>Add Planets Form!</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n            </label>\n            <label>\n              Inhabitants:\n              <input\n                type=\"text\"\n                list=\"inhabitant-list\"\n                name=\"inhabitants\"\n                onChange={this.handleChange}\n                value={this.state.inhabitants}\n              />\n              <datalist id=\"inhabitant-list\">\n                <option>Asharian</option>\n                <option>Eldar</option>\n                <option>Human</option>\n                <option>Ork</option>\n              </datalist>\n            </label>\n            <label>\n              Population:\n              <input\n                type=\"number\"\n                name=\"population\"\n                onChange={this.handleChange}\n                value={this.state.population}\n                step=\"1000\"\n              />\n            </label>\n            <label>\n              Garrison:\n              <select\n                name=\"garrisonId\"\n                onChange={this.handleChange}\n                value={this.state.garrisonId}\n                required\n              >\n                <option value=\"\" disabled defaultValue hidden>\n                  Choose from list\n                </option>\n                {this.createGarrisonSelect()}\n              </select>\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class EditPlanet extends React.Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrison: {\n      id: 0,\n      chapter: \"\",\n      size: 0,\n    },\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: \"\",\n      },\n    ],\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ garrisonArray: [...json] });\n      });\n\n    fetch(PLANET_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(json);\n        const garrison = {\n          id: json.garrison.id,\n          chapter: json.garrison.chapter,\n          size: json.garrison.size,\n        };\n        this.setState(\n          {\n            id: json.id,\n            name: json.name,\n            inhabitants: json.inhabitants,\n            population: json.population,\n            garrisonId: json.garrison_id,\n            garrison: { ...garrison },\n          },\n          () => console.log(\"returned from fetch in PlanetEDIT: \", this.state)\n        );\n      });\n  }\n\n  createGarrisonSelect = () => {\n    return this.state.garrisonArray.map((garrison) => {\n      return (\n        <option key={garrison.id} value={garrison.id}>\n          {garrison.chapter}\n        </option>\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        inhabitants: this.state.inhabitants,\n        population: this.state.population,\n        garrison_id: this.state.garrisonId,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(PLANET_URL + \"/planets/\" + this.state.id, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/planets/${this.state.id}`,\n            state: { message: \"Planet Successfully Updated!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-planet-container\">\n          <h1>Modify Planet</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n            </label>\n            <label>\n              Inhabitants:\n              <input\n                type=\"text\"\n                list=\"inhabitant-list\"\n                name=\"inhabitants\"\n                onChange={this.handleChange}\n                value={this.state.inhabitants}\n              />\n              <datalist id=\"inhabitant-list\">\n                <option>Asharian</option>\n                <option>Eldar</option>\n                <option>Human</option>\n                <option>Ork</option>\n              </datalist>\n            </label>\n            <label>\n              Population:\n              <input\n                type=\"number\"\n                name=\"population\"\n                onChange={this.handleChange}\n                value={this.state.population}\n                step=\"1000\"\n              />\n            </label>\n            <label>\n              Garrison:\n              <select\n                name=\"garrisonId\"\n                onChange={this.handleChange}\n                value={this.state.garrisonId}\n                required\n              >\n                <option value=\"\" disabled defaultValue hidden>\n                  Choose from list\n                </option>\n                {this.createGarrisonSelect()}\n              </select>\n            </label>\n            <button type=\"submit\">Update</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst GarrisonList = (props) => {\n  // console.log(\"props in planet list component planets: \", props.planetArray[0]);\n  // console.log(\"props in planet list component garrisons: \", props.garrisonArray[0]);\n  // console.log(\"garrison test: \", props.garrisonArray.find(garrison => garrison.id === props.planetArray[0].garrison_id));\n\n  return (\n    <table className=\"planet-table\">\n      <thead>\n        <tr>\n          <th>Garrison ID</th>\n          <th>Chapter Name</th>\n          <th>Size</th>\n          <th>View Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.garrisonArray.map((garrison) => {\n          return (\n            <tr key={garrison.id}>\n              <td>{garrison.id}</td>\n              <td>{garrison.chapter}</td>\n              <td>{garrison.size}</td>\n              <td><Link exact=\"true\" to={`/garrisons/${garrison.id}`}>Get Garrison Details</Link></td>\n             \n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default GarrisonList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import fetchPlanets from \"../actions/fetchPlanets\";\nimport GarrisonList from \"../components/garrison/GarrisonList\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class GarrisonContainer extends React.Component {\n  \n  state = {\n    id: 0,\n    name: undefined,\n    inhabitants: undefined,\n    population: 0,\n    garrisonId: 0,\n    planetArray: [\n        {\n            id: 0,\n            name: \"\",\n            inhabitants: \"\",\n            population: 0,\n            garrison_id: 0\n        }\n    ],\n    garrisonArray: [\n        {\n            id: 0,\n            chapter: \"\",\n            size: 0\n        }\n    ],\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState(\n          { garrisonArray: [...json] },\n          () =>\n            console.log(\"returned array from fetch: \", this.state.garrisonArray)\n        );\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"garrison-container\">\n        <h1>All Garrisons in the Administratum</h1>\n        <GarrisonList garrisonArray={this.state.garrisonArray} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst BASE_URL = `http://52.53.150.109:8080/AdeptusAdministratum`;\n\nexport default class GarrisonDetail extends React.Component {\n  state = {\n    id: 0,\n    chapter: \"\",\n    size: 0,\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(BASE_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        \n        this.setState(\n          {\n            id: json.id,\n            chapter: json.chapter,\n            size: json.size\n          },\n          () =>\n            console.log(\n              \"returned from fetch in GarrisonDetail: \",\n              this.state,\n              this.props\n            )\n        );\n      });\n  }\n\n  handleDelete = () => {\n    const configObject = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    fetch(BASE_URL + this.props.match.url, configObject).then((resp) =>\n      this.setState({ redirect: true })\n    );\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/garrisons\" />;\n    } else {\n      return (\n        <div id=\"planet-detail-container\">\n          <h2 className=\"msgSuccess\">\n            {this.props.history.location.state\n              ? this.props.history.location.state.message\n              : \"\"}\n          </h2>\n          <h1>Garrison {this.state.chapter}</h1>\n          <p>Size: {this.state.size}</p>\n          <Link to={`/garrisons/${this.state.id}/edit`}>\n            <button id=\"updateBtn\">Modify Garrison Details</button>\n          </Link>\n          <button id=\"deleteBtn\" onClick={this.handleDelete}>\n            Delete Garrison\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class AddGarrison extends React.Component {\n  state = {\n    id: 0,\n    chapter: \"\",\n    size: 0,\n    redirect: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /// need to clear form after\n    // Add redirect\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        chapter: this.state.chapter,\n        size: this.state.size,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(GARRISON_URL, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/garrisons/${this.state.id}`,\n            state: { message: \"Garrison Successfully Created!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-garrison-container\">\n          <h1>Add Garrisons Form!</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Chapter:\n              <input\n                type=\"text\"\n                name=\"chapter\"\n                onChange={this.handleChange}\n                value={this.state.chapter}\n              />\n            </label>\n            <label>\n              Size:\n              <input\n                type=\"number\"\n                name=\"size\"\n                onChange={this.handleChange}\n                value={this.state.size}\n                step=\"1000\"\n              />\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nconst BASE_URL = \"http://52.53.150.109:8080/AdeptusAdministratum\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class EditGarrison extends React.Component {\n  state = {\n    id: \"\",\n    chapter: \"\",\n    size: \"\",\n    redirect: false\n  };\n\n  componentDidMount() {\n    \n    fetch(BASE_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(json);\n        \n        this.setState(\n          {\n            id: json.id,\n            chapter: json.chapter,\n            size: json.size\n          },\n          () => console.log(\"returned from fetch in GarrisonEDIT: \", this.state)\n        );\n      });\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        chapter: this.state.chapter,\n        size: this.state.size,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(BASE_URL + \"/garrisons/\" + this.state.id, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/garrisons/${this.state.id}`,\n            state: { message: \"Garrison Successfully Updated!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-garrison-container\">\n          <h1>Add Garrisons Form!</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Chapter:\n              <input\n                type=\"text\"\n                name=\"chapter\"\n                onChange={this.handleChange}\n                value={this.state.chapter}\n              />\n            </label>\n            <label>\n              Size:\n              <input\n                type=\"number\"\n                name=\"size\"\n                onChange={this.handleChange}\n                value={this.state.size}\n                step=\"1000\"\n              />\n            </label>\n            <button type=\"submit\">\n              Update\n            </button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\n\nexport default class FooterContainer extends React.Component {\n\n    render() {\n        return(\n            <div id=\"footer-container\">\n            <a href='https://pngtree.com/free-backgrounds'>free background photos frompngtree.com</a>\n            </div>\n        )\n    }\n}","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBarContainer from \"./containers/NavBarContainer.js\";\nimport Login from \"./components/user/Login\";\nimport Logout from \"./components/user/Logout\";\nimport Home from \"./components/Home\";\nimport PlanetContainer from \"./containers/PlanetContainer\";\nimport PlanetDetail from \"./components/planet/PlanetDetail\";\nimport AddPlanet from \"./components/planet/AddPlanet\";\nimport EditPlanet from \"./components/planet/EditPlanet\";\nimport GarrisonContainer from \"./containers/GarrisonContainer\";\nimport GarrisonDetail from \"./components/garrison/GarrisonDetail\";\nimport AddGarrison from \"./components/garrison/AddGarrison\";\nimport EditGarrison from \"./components/garrison/EditGarrison\";\nimport FooterContainer from \"./containers/FooterContainer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div>\n            <NavBarContainer />\n          </div>\n          <div className=\"app-div\">\n            <Switch>\n              <Route exact path=\"/\" render={(routerProps) => <Home {...routerProps} />} />\n              <Route exact path=\"/planets\" component={PlanetContainer} />\n              <Route exact path=\"/planets/new\" component={AddPlanet} />\n              <Route\n                exact\n                path=\"/planets/:id/edit\"\n                render={(routerProps) => <EditPlanet {...routerProps} />}\n              />\n              <Route\n                exact\n                path=\"/planets/:id\"\n                render={(routerProps) => <PlanetDetail {...routerProps} />}\n              />\n              <Route exact path=\"/garrisons\" component={GarrisonContainer} />\n              <Route exact path=\"/garrisons/new\" component={AddGarrison} />\n              <Route\n                exact\n                path=\"/garrisons/:id/edit\"\n                render={(routerProps) => <EditGarrison {...routerProps} />}\n              />\n              <Route\n                exact\n                path=\"/garrisons/:id\"\n                render={(routerProps) => <GarrisonDetail {...routerProps} />}\n              />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/logout\" component={Logout} />\n            </Switch>\n          </div>\n          <div>\n            <FooterContainer />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
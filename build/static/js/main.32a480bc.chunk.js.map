{"version":3,"sources":["images/logo.png","images/planet2.jpg","images/army2.jpg","containers/NavBarContainer.js","Home.js","components/planet/PlanetList.js","containers/PlanetContainer.js","components/planet/PlanetDetail.js","components/planet/AddPlanet.js","components/planet/EditPlanet.js","components/garrison/GarrisonList.js","containers/GarrisonContainer.js","components/garrison/GarrisonDetail.js","components/garrison/AddGarrison.js","components/garrison/EditGarrison.js","containers/FooterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NavBarContainer","id","className","to","src","logo","alt","planet2","army2","React","Component","Home","exact","PlanetList","props","planetArray","map","planet","name","inhabitants","population","PlanetContainer","state","undefined","garrisonId","garrison_id","garrisonArray","chapter","size","fetch","then","resp","json","setState","console","log","this","PLANET_URL","PlanetDetail","garrison","redirect","handleDelete","match","url","method","headers","Accept","history","location","message","onClick","AddPlanet","createGarrisonSelect","value","handleChange","event","target","handleSubmit","preventDefault","configObject","body","JSON","stringify","pathname","onSubmit","type","onChange","list","step","required","disabled","defaultValue","hidden","EditPlanet","GarrisonList","GarrisonContainer","BASE_URL","GarrisonDetail","GARRISON_URL","AddGarrison","EditGarrison","FooterContainer","href","App","path","component","render","routerProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32a480bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7a6f7eeb.png\";","export default __webpack_public_path__ + \"static/media/planet2.52d95c54.jpg\";","export default __webpack_public_path__ + \"static/media/army2.66695b41.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport planet2 from \"../images/planet2.jpg\";\nimport army2 from \"../images/army2.jpg\";\n\n\nexport default class NavBarContainer extends React.Component {\n  render() {\n    return (\n      <div id=\"navbar-container\">\n        <div id=\"brand\">\n          <Link className=\"menu-link\" to=\"/\">\n            <img src={logo} alt=\"Logo\" />\n            Home\n          </Link>\n        </div>\n        <div id=\"navbar-items\">\n        <Link className=\"menu-link\" to=\"/planets\">\n            <img src={planet2} alt=\"Planet Logo\" />\n            Planets\n          </Link>\n          <Link className=\"menu-link\" to=\"/garrisons\">\n            <img src={army2} alt=\"Garrison Logo\" />\n            Garrisons\n          </Link>\n          <div>Item3</div>\n        </div>\n\n        <div id=\"login\">Login / Username</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport planet2 from \"./images/planet2.jpg\";\nimport army2 from \"./images/army2.jpg\";\n\nconst Home = () => {\n  return (\n    <div id=\"home-container\">\n      <h1>Welcome to Adeptus Administratum</h1>\n      <div id=\"menu-grid\">\n        <div id=\"menu1\">\n          <div>\n          <img src={planet2} alt=\"planet logo\" />\n          <h2>Manage Planets</h2>\n          </div>\n          <Link className=\"menu-link\" to=\"/planets\">\n            View / Update / Delete Planets\n          </Link>\n          <Link className=\"menu-link\" exact=\"true\" to=\"/planets/new\">\n            Add New Planet\n          </Link>\n        </div>\n        <div id=\"menu2\">\n        <div>\n          <img src={army2} alt=\"army logo\" />\n          <h2>Manage Garrisons</h2>\n          </div>\n          <Link className=\"menu-link\" to=\"/garrisons\">\n            View / Update / Delete Garrisons\n          </Link>\n          <Link className=\"menu-link\" to=\"/garrisons/new\">\n            Add New Garrison\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst PlanetList = (props) => {\n  // console.log(\"props in planet list component planets: \", props.planetArray[0]);\n  // console.log(\"props in planet list component garrisons: \", props.garrisonArray[0]);\n  // console.log(\"garrison test: \", props.garrisonArray.find(garrison => garrison.id === props.planetArray[0].garrison_id));\n\n  return (\n    <table className=\"planet-table\">\n      <thead>\n        <tr>\n          <th>Planet ID</th>\n          <th>Planet Name</th>\n          <th>Inhabitants</th>\n          <th>Population</th>\n          <th>View Details</th>\n          \n        </tr>\n      </thead>\n      <tbody>\n        {props.planetArray.map((planet) => {\n          return (\n            <tr key={planet.id}>\n              <td>{planet.id}</td>\n              <td>{planet.name}</td>\n              <td>{planet.inhabitants}</td>\n              <td>{planet.population}</td>\n              <td><Link exact=\"true\" to={`/planets/${planet.id}`}>Get Planet Details</Link></td>\n              {/* For now... not working before fetch.  Plan to just display when clicking on planet for more detail... */}\n              {/* <td>{props.garrisonArray.find(garrison => garrison.id === props.planet.garrison_id)}</td> */}\n              {/* <td>{props.garrisonArray.find(garrison => garrison.id === props.planet.garrison_id).size || 0}</td> */}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PlanetList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import fetchPlanets from \"../actions/fetchPlanets\";\nimport PlanetList from \"../components/planet/PlanetList\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class PlanetContainer extends React.Component {\n  \n  state = {\n    id: 0,\n    name: undefined,\n    inhabitants: undefined,\n    population: 0,\n    garrisonId: 0,\n    planetArray: [\n        {\n            id: 0,\n            name: \"\",\n            inhabitants: \"\",\n            population: 0,\n            garrison_id: 0\n        }\n    ],\n    garrisonArray: [\n        {\n            id: 0,\n            chapter: \"\",\n            size: 0\n        }\n    ],\n  };\n\n  componentDidMount() {\n    fetch(PLANET_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState(\n          { planetArray: [...json] },\n          () =>\n            console.log(\"returned array from fetch: \", this.state.planetArray)\n        );\n      });\n\n  }\n\n  render() {\n    return (\n      <div id=\"planet-container\">\n        <h1>This is the PlanetContainer!</h1>\n        <PlanetList planetArray={this.state.planetArray} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = `http://52.53.150.109:8080/AdeptusAdministratum`;\n\nexport default class PlanetDetail extends React.Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrison: {\n      id: 0,\n      chapter: \"\",\n      size: 0,\n    },\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(PLANET_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        const garrison = {\n          id: json.garrison.id,\n          chapter: json.garrison.chapter,\n          size: json.garrison.size,\n        };\n        this.setState(\n          {\n            id: json.id,\n            name: json.name,\n            inhabitants: json.inhabitants,\n            population: json.population,\n            garrisonId: json.garrison_id,\n            garrison: { ...garrison },\n          },\n          () =>\n            console.log(\n              \"returned from fetch in PlanetDetail: \",\n              this.state,\n              this.props\n            )\n        );\n      });\n  }\n\n  handleDelete = () => {\n    const configObject = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    fetch(PLANET_URL + this.props.match.url, configObject).then((resp) =>\n      this.setState({ redirect: true })\n    );\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/planets\" />;\n    } else {\n      return (\n        <div id=\"planet-detail-container\">\n          <h2 className=\"msgSuccess\">\n            {this.props.history.location.state\n              ? this.props.history.location.state.message\n              : \"\"}\n          </h2>\n          <h1>Planet {this.state.name}</h1>\n          <p>Inhabitants: {this.state.inhabitants}</p>\n          <p>Population: {this.state.population}</p>\n          <p>Garrison Chapter: {this.state.garrison.chapter}</p>\n          <p>Garrison Size: {this.state.garrison.size}</p>\n          <Link to={`/planets/${this.state.id}/edit`}>\n            <button id=\"updateBtn\">Modify Planet Details</button>\n          </Link>\n          <button id=\"deleteBtn\" onClick={this.handleDelete}>\n            Delete Planet\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class AddPlanet extends React.Component {\n  state = {\n    id: 0,\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: \"\",\n      },\n    ],\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ garrisonArray: [...json] });\n      });\n  }\n\n  createGarrisonSelect = () => {\n    return this.state.garrisonArray.map((garrison) => {\n      return (\n        <option key={garrison.id} value={garrison.id}>\n          {garrison.chapter}\n        </option>\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        inhabitants: this.state.inhabitants,\n        population: this.state.population,\n        garrison_id: this.state.garrisonId,\n      }),\n    };\n\n    fetch(PLANET_URL, configObject)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({id: json.id, redirect: true})\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/planets/${this.state.id}`,\n            state: { message: \"Planet Successfully Created!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-planet-container\">\n          <h1>Add Planets Form!</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n            </label>\n            <label>\n              Inhabitants:\n              <input\n                type=\"text\"\n                list=\"inhabitant-list\"\n                name=\"inhabitants\"\n                onChange={this.handleChange}\n                value={this.state.inhabitants}\n              />\n              <datalist id=\"inhabitant-list\">\n                <option>Asharian</option>\n                <option>Eldar</option>\n                <option>Human</option>\n                <option>Ork</option>\n              </datalist>\n            </label>\n            <label>\n              Population:\n              <input\n                type=\"number\"\n                name=\"population\"\n                onChange={this.handleChange}\n                value={this.state.population}\n                step=\"1000\"\n              />\n            </label>\n            <label>\n              Garrison:\n              <select\n                name=\"garrisonId\"\n                onChange={this.handleChange}\n                value={this.state.garrisonId}\n                required\n              >\n                <option value=\"\" disabled defaultValue hidden>\n                  Choose from list\n                </option>\n                {this.createGarrisonSelect()}\n              </select>\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class EditPlanet extends React.Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrison: {\n      id: 0,\n      chapter: \"\",\n      size: 0,\n    },\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: \"\",\n      },\n    ],\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ garrisonArray: [...json] });\n      });\n\n    fetch(PLANET_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(json);\n        const garrison = {\n          id: json.garrison.id,\n          chapter: json.garrison.chapter,\n          size: json.garrison.size,\n        };\n        this.setState(\n          {\n            id: json.id,\n            name: json.name,\n            inhabitants: json.inhabitants,\n            population: json.population,\n            garrisonId: json.garrison_id,\n            garrison: { ...garrison },\n          },\n          () => console.log(\"returned from fetch in PlanetEDIT: \", this.state)\n        );\n      });\n  }\n\n  createGarrisonSelect = () => {\n    return this.state.garrisonArray.map((garrison) => {\n      return (\n        <option key={garrison.id} value={garrison.id}>\n          {garrison.chapter}\n        </option>\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        inhabitants: this.state.inhabitants,\n        population: this.state.population,\n        garrison_id: this.state.garrisonId,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(PLANET_URL + \"/planets/\" + this.state.id, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/planets/${this.state.id}`,\n            state: { message: \"Planet Successfully Updated!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-planet-container\">\n          <h1>Modify Planet</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n            </label>\n            <label>\n              Inhabitants:\n              <input\n                type=\"text\"\n                list=\"inhabitant-list\"\n                name=\"inhabitants\"\n                onChange={this.handleChange}\n                value={this.state.inhabitants}\n              />\n              <datalist id=\"inhabitant-list\">\n                <option>Asharian</option>\n                <option>Eldar</option>\n                <option>Human</option>\n                <option>Ork</option>\n              </datalist>\n            </label>\n            <label>\n              Population:\n              <input\n                type=\"number\"\n                name=\"population\"\n                onChange={this.handleChange}\n                value={this.state.population}\n                step=\"1000\"\n              />\n            </label>\n            <label>\n              Garrison:\n              <select\n                name=\"garrisonId\"\n                onChange={this.handleChange}\n                value={this.state.garrisonId}\n                required\n              >\n                <option value=\"\" disabled defaultValue hidden>\n                  Choose from list\n                </option>\n                {this.createGarrisonSelect()}\n              </select>\n            </label>\n            <button type=\"submit\">Update</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\n\nconst GarrisonList = (props) => {\n  // console.log(\"props in planet list component planets: \", props.planetArray[0]);\n  // console.log(\"props in planet list component garrisons: \", props.garrisonArray[0]);\n  // console.log(\"garrison test: \", props.garrisonArray.find(garrison => garrison.id === props.planetArray[0].garrison_id));\n\n  return (\n    <table className=\"planet-table\">\n      <thead>\n        <tr>\n          <th>Garrison ID</th>\n          <th>Chapter Name</th>\n          <th>Size</th>\n          <th>View Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.garrisonArray.map((garrison) => {\n          return (\n            <tr key={garrison.id}>\n              <td>{garrison.id}</td>\n              <td>{garrison.chapter}</td>\n              <td>{garrison.size}</td>\n              <td><Link exact=\"true\" to={`/garrisons/${garrison.id}`}>Get Garrison Details</Link></td>\n             \n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default GarrisonList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import fetchPlanets from \"../actions/fetchPlanets\";\nimport GarrisonList from \"../components/garrison/GarrisonList\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class GarrisonContainer extends React.Component {\n  \n  state = {\n    id: 0,\n    name: undefined,\n    inhabitants: undefined,\n    population: 0,\n    garrisonId: 0,\n    planetArray: [\n        {\n            id: 0,\n            name: \"\",\n            inhabitants: \"\",\n            population: 0,\n            garrison_id: 0\n        }\n    ],\n    garrisonArray: [\n        {\n            id: 0,\n            chapter: \"\",\n            size: 0\n        }\n    ],\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState(\n          { garrisonArray: [...json] },\n          () =>\n            console.log(\"returned array from fetch: \", this.state.garrisonArray)\n        );\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"garrison-container\">\n        <h1>This is the GarrisonContainer!</h1>\n        <GarrisonList garrisonArray={this.state.garrisonArray} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst BASE_URL = `http://52.53.150.109:8080/AdeptusAdministratum`;\n\nexport default class GarrisonDetail extends React.Component {\n  state = {\n    id: 0,\n    chapter: \"\",\n    size: 0,\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(BASE_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        \n        this.setState(\n          {\n            id: json.id,\n            chapter: json.chapter,\n            size: json.size\n          },\n          () =>\n            console.log(\n              \"returned from fetch in GarrisonDetail: \",\n              this.state,\n              this.props\n            )\n        );\n      });\n  }\n\n  handleDelete = () => {\n    const configObject = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    fetch(BASE_URL + this.props.match.url, configObject).then((resp) =>\n      this.setState({ redirect: true })\n    );\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/garrisons\" />;\n    } else {\n      return (\n        <div id=\"planet-detail-container\">\n          <h2 className=\"msgSuccess\">\n            {this.props.history.location.state\n              ? this.props.history.location.state.message\n              : \"\"}\n          </h2>\n          <h1>Garrison {this.state.chapter}</h1>\n          <p>Size: {this.state.size}</p>\n          <Link to={`/garrisons/${this.state.id}/edit`}>\n            <button id=\"updateBtn\">Modify Garrison Details</button>\n          </Link>\n          <button id=\"deleteBtn\" onClick={this.handleDelete}>\n            Delete Garrison\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class AddGarrison extends React.Component {\n  state = {\n    id: 0,\n    chapter: \"\",\n    size: 0,\n    redirect: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /// need to clear form after\n    // Add redirect\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        chapter: this.state.chapter,\n        size: this.state.size,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(GARRISON_URL, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/garrisons/${this.state.id}`,\n            state: { message: \"Garrison Successfully Created!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-garrison-container\">\n          <h1>Add Garrisons Form!</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Chapter:\n              <input\n                type=\"text\"\n                name=\"chapter\"\n                onChange={this.handleChange}\n                value={this.state.chapter}\n              />\n            </label>\n            <label>\n              Size:\n              <input\n                type=\"number\"\n                name=\"size\"\n                onChange={this.handleChange}\n                value={this.state.size}\n                step=\"1000\"\n              />\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nconst BASE_URL = \"http://52.53.150.109:8080/AdeptusAdministratum\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class EditGarrison extends React.Component {\n  state = {\n    id: \"\",\n    chapter: \"\",\n    size: \"\",\n    redirect: false\n  };\n\n  componentDidMount() {\n    \n    fetch(BASE_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(json);\n        \n        this.setState(\n          {\n            id: json.id,\n            chapter: json.chapter,\n            size: json.size\n          },\n          () => console.log(\"returned from fetch in GarrisonEDIT: \", this.state)\n        );\n      });\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        chapter: this.state.chapter,\n        size: this.state.size,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(BASE_URL + \"/garrisons/\" + this.state.id, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/garrisons/${this.state.id}`,\n            state: { message: \"Garrison Successfully Updated!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-garrison-container\">\n          <h1>Add Garrisons Form!</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Chapter:\n              <input\n                type=\"text\"\n                name=\"chapter\"\n                onChange={this.handleChange}\n                value={this.state.chapter}\n              />\n            </label>\n            <label>\n              Size:\n              <input\n                type=\"number\"\n                name=\"size\"\n                onChange={this.handleChange}\n                value={this.state.size}\n                step=\"1000\"\n              />\n            </label>\n            <button type=\"submit\">\n              Update\n            </button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\n\nexport default class FooterContainer extends React.Component {\n\n    render() {\n        return(\n            <div id=\"footer-container\">\n            <a href='https://pngtree.com/free-backgrounds'>free background photos frompngtree.com</a>\n            </div>\n        )\n    }\n}","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBarContainer from \"./containers/NavBarContainer.js\";\nimport Home from \"./Home\";\nimport PlanetContainer from \"./containers/PlanetContainer\";\nimport PlanetDetail from \"./components/planet/PlanetDetail\";\nimport AddPlanet from \"./components/planet/AddPlanet\";\nimport EditPlanet from \"./components/planet/EditPlanet\";\nimport GarrisonContainer from \"./containers/GarrisonContainer\";\nimport GarrisonDetail from \"./components/garrison/GarrisonDetail\";\nimport AddGarrison from \"./components/garrison/AddGarrison\";\nimport EditGarrison from \"./components/garrison/EditGarrison\";\nimport FooterContainer from \"./containers/FooterContainer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div>\n            <NavBarContainer />\n          </div>\n          <div className=\"app-div\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/planets\" component={PlanetContainer} />\n              <Route exact path=\"/planets/new\" component={AddPlanet} />\n              <Route\n                exact\n                path=\"/planets/:id/edit\"\n                render={(routerProps) => <EditPlanet {...routerProps} />}\n              />\n              <Route\n                exact\n                path=\"/planets/:id\"\n                render={(routerProps) => <PlanetDetail {...routerProps} />}\n              />\n              <Route exact path=\"/garrisons\" component={GarrisonContainer} />\n              <Route exact path=\"/garrisons/new\" component={AddGarrison} />\n              <Route\n                exact\n                path=\"/garrisons/:id/edit\"\n                render={(routerProps) => <EditGarrison {...routerProps} />}\n              />\n              <Route\n                exact\n                path=\"/garrisons/:id\"\n                render={(routerProps) => <GarrisonDetail {...routerProps} />}\n              />\n            </Switch>\n          </div>\n          <div>\n            <FooterContainer />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["images/logo.png","images/planet2.jpg","images/army2.jpg","images/search.png","containers/NavBarContainer.js","components/user/Login.js","components/user/Logout.js","components/Home.js","components/planet/PlanetList.js","components/planet/PlanetView.js","containers/PlanetContainer.js","components/planet/PlanetDetail.js","components/planet/AddPlanet.js","components/planet/EditPlanet.js","components/planet/SearchPlanets.js","components/garrison/GarrisonList.js","containers/GarrisonContainer.js","components/garrison/GarrisonDetail.js","components/garrison/AddGarrison.js","components/garrison/EditGarrison.js","containers/FooterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NavBarContainer","state","login","prevProps","this","props","setState","id","exact","activeClassName","className","to","src","logo","alt","planet2","army2","search","React","Component","LOGIN_URL","Login","username","password","redirect","handleChange","event","target","name","value","handleSubmit","preventDefault","configObject","method","headers","Accept","body","JSON","stringify","fetch","then","resp","json","returnLogin","pathname","message","onSubmit","type","onChange","required","LOGOUT_URL","returnLogout","Home","history","location","PlanetList","formatNumber","number","Number","isNaN","numberArry","parseFloat","toFixed","split","replace","planetArray","map","planet","inhabitants","population","PlanetView","sortedPlanetList","sortedPlanetArray","sort","planetA","planetB","toUpperCase","PlanetContainer","undefined","garrisonId","garrison_id","garrisonArray","chapter","size","PLANET_URL","PlanetDetail","garrison","handleDelete","match","url","console","log","onClick","AddPlanet","createGarrisonSelect","for","list","step","disabled","defaultValue","hidden","EditPlanet","SEARCH_URL","SearchPlanets","result","e","handleSearch","placeholder","length","GarrisonList","GarrisonContainer","BASE_URL","GarrisonDetail","filteredPlanetArray","filter","GARRISON_URL","AddGarrison","EditGarrison","FooterContainer","href","App","updateUser","loginBoolean","path","render","routerProps","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.185ed7f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7a6f7eeb.png\";","export default __webpack_public_path__ + \"static/media/planet2.52d95c54.jpg\";","export default __webpack_public_path__ + \"static/media/army2.66695b41.jpg\";","export default __webpack_public_path__ + \"static/media/search.652d3e17.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\nimport planet2 from \"../images/planet2.jpg\";\nimport army2 from \"../images/army2.jpg\";\nimport search from \"../images/search.png\";\n\nexport default class NavBarContainer extends React.Component {\n  state = {\n    login: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.login !== this.props.login) {\n      this.setState({ login: this.props.login });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"navbar-container\">\n        <div id=\"brand\">\n          <NavLink exact activeClassName=\"active\" className=\"menu-link\" to=\"/\">\n            <img src={logo} alt=\"Logo\" />\n            Home\n          </NavLink>\n        </div>\n        <div id=\"navbar-items\">\n          <NavLink\n            exact\n            activeClassName=\"active\"\n            className=\"menu-link\"\n            to=\"/planets\"\n          >\n            <img src={planet2} alt=\"Planet Logo\" />\n            Planets\n          </NavLink>\n          <NavLink\n            activeClassName=\"active\"\n            className=\"menu-link\"\n            to=\"/garrisons\"\n          >\n            <img src={army2} alt=\"Garrison Logo\" />\n            Garrisons\n          </NavLink>\n          <NavLink\n            activeClassName=\"active\"\n            className=\"menu-link\"\n            to=\"/planets/search\"\n          >\n            <img src={search} alt=\"Search Logo\" />\n            Search Empire\n          </NavLink>\n        </div>\n        <div id=\"user-items\">\n          {this.state.login ? (\n            <Link className=\"menu-link\" to=\"/logout\">\n              Logout\n            </Link>\n          ) : (\n            <Link className=\"menu-link\" to=\"/login\">\n              Login\n            </Link>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LOGIN_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/login\";\n\nexport default class Login extends React.Component {\n  state = {\n    username: \"admin\",\n    password: \"admin\",\n    redirect: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /// need to clear form after\n    // Add redirect\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    };\n\n    fetch(LOGIN_URL, configObject)\n      .then((resp) => {\n        resp.json();\n      })\n      .then((json) => {\n        this.props.returnLogin(true);\n        this.setState({ redirect: true });\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { message: \"Successfully Logged In!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"login-container\">\n          <h2>User Login</h2>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                onChange={this.handleChange}\n                value={this.state.username}\n                required\n              />\n            </label>\n            <label>\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                onChange={this.handleChange}\n                value={this.state.password}\n                required\n              />\n            </label>\n            <button type=\"submit\">Login</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LOGOUT_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/logout\";\n\nexport default class Login extends React.Component {\n  state = {\n    username: \"admin\",\n    password: \"admin\",\n    redirect: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /// need to clear form after\n    // Add redirect\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    };\n\n    fetch(LOGOUT_URL, configObject)\n      .then((resp) => {\n        resp.json();\n      })\n      .then((json) => {\n        this.props.returnLogout(false);\n        this.setState({ redirect: true });\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { message: \"Successfully Logged Out!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"login-container\">\n          <h2>User Logout (Must Enter Username and Password)</h2>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                onChange={this.handleChange}\n                value={this.state.username}\n                required\n              />\n            </label>\n            <label>\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                onChange={this.handleChange}\n                value={this.state.password}\n                required\n              />\n            </label>\n            <button type=\"submit\">Logout</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport planet2 from \"../images/planet2.jpg\";\nimport army2 from \"../images/army2.jpg\";\n\nconst Home = (props) => {\n  return (\n    <div id=\"home-container\">\n      <h2 className=\"msgSuccess\">\n        {props.history.location.state\n          ? props.history.location.state.message\n          : \"\"}\n      </h2>\n      <h1>Welcome to Adeptus Administratum</h1>\n      <p>\n        The Adeptus Administratum is the administrative and bureaucratic heart\n        of the Imperium of Man, managing thousands of worlds, billions of\n        soldiers, and trillions of citizens.\n      </p>\n      <div id=\"menu-grid\">\n        <div id=\"menu1\">\n          <div>\n            <img src={planet2} alt=\"planet logo\" />\n          </div>\n          <Link className=\"menu-link\" to=\"/planets\">\n            <h2>Manage Existing Planets</h2>\n          </Link>\n          <Link className=\"menu-link\" exact=\"true\" to=\"/planets/new\">\n            <h2>Add Planet</h2>\n          </Link>\n        </div>\n        <div id=\"menu2\">\n          <div>\n            <img src={army2} alt=\"army logo\" />\n          </div>\n          <Link className=\"menu-link\" to=\"/garrisons\">\n            <h2>Manage Existing Garrisons</h2>\n          </Link>\n          <Link className=\"menu-link\" to=\"/garrisons/new\">\n            <h2>Add Garrison</h2>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PlanetList = (props) => {\n  // console.log(\"props in planet list component planets: \", props.planetArray[0]);\n  // console.log(\"props in planet list component garrisons: \", props.garrisonArray[0]);\n  // console.log(\"garrison test: \", props.garrisonArray.find(garrison => garrison.id === props.planetArray[0].garrison_id));\n\n  const formatNumber = (number) => {\n    if (!number || Number.isNaN(number)) {\n      return number;\n    }\n    const numberArry = parseFloat(number).toFixed(2).split(\".\");\n    numberArry[0] = numberArry[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return numberArry[0];\n  };\n\n  return (\n    <table className=\"planet-table\">\n      <thead>\n        <tr>\n          <th>Planet ID</th>\n          <th>Planet Name</th>\n          <th>Inhabitants</th>\n          <th>Population</th>\n          <th>View Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.planetArray.map((planet) => {\n          return (\n            <tr key={planet.id}>\n              <td>{planet.id}</td>\n              <td>{planet.name}</td>\n              <td>{planet.inhabitants}</td>\n              <td id=\"population\">{formatNumber(planet.population)}</td>\n              <td>\n                <Link exact=\"true\" to={`/planets/${planet.id}`}>\n                  Get Planet Details\n                </Link>\n              </td>\n              {/* For now... not working before fetch.  Plan to just display when clicking on planet for more detail... */}\n              {/* <td>{props.garrisonArray.find(garrison => garrison.id === props.planet.garrison_id)}</td> */}\n              {/* <td>{props.garrisonArray.find(garrison => garrison.id === props.planet.garrison_id).size || 0}</td> */}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PlanetList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import fetchPlanets from \"../actions/fetchPlanets\";\nimport PlanetList from \"./PlanetList\";\n\nexport default class PlanetView extends React.Component {\n  sortedPlanetList = () => {\n    const sortedPlanetArray = this.props.planetArray.sort(\n      (planetA, planetB) => {\n        if (planetA.name.toUpperCase() < planetB.name.toUpperCase()) {\n          return -1;\n        }\n        if (planetB.name.toUpperCase() < planetA.name.toUpperCase()) {\n          return 1;\n        }\n        return 0;\n      }\n    );\n    return <PlanetList planetArray={sortedPlanetArray} />;\n  };\n\n  render() {\n    return <div>{this.sortedPlanetList()}</div>;\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PlanetView from \"../components/planet/PlanetView\";\n\n// import fetchPlanets from \"../actions/fetchPlanets\";\n// import PlanetList from \"../components/planet/PlanetList\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class PlanetContainer extends React.Component {\n  state = {\n    id: 0,\n    name: undefined,\n    inhabitants: undefined,\n    population: 0,\n    garrisonId: 0,\n    planetArray: [\n      {\n        id: 0,\n        name: \"\",\n        inhabitants: \"\",\n        population: 0,\n        garrison_id: 0,\n      },\n    ],\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: 0,\n      },\n    ],\n  };\n\n  componentDidMount() {\n    fetch(PLANET_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ planetArray: [...json] });\n      });\n  }\n\n  // sortedPlanetList = () => {\n  //   const sortedPlanetArray = this.state.planetArray.sort(\n  //     (planetA, planetB) => {\n  //       if (planetA.name.toUpperCase() < planetB.name.toUpperCase()) {\n  //         return -1;\n  //       }\n  //       if (planetB.name.toUpperCase() < planetA.name.toUpperCase()) {\n  //         return 1;\n  //       }\n  //       return 0;\n  //     }\n  //   );\n  //   return <PlanetList planetArray={sortedPlanetArray} />;\n  // };\n\n  render() {\n    return (\n      <div id=\"planet-container\">\n        <h1>All Planets in the Administratum</h1>\n        <PlanetView planetArray={this.state.planetArray} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = `http://52.53.150.109:8080/AdeptusAdministratum`;\n\nexport default class PlanetDetail extends React.Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrison: {\n      id: 0,\n      chapter: \"\",\n      size: 0,\n    },\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(PLANET_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        const garrison = {\n          id: json.garrison.id,\n          chapter: json.garrison.chapter,\n          size: json.garrison.size,\n        };\n        this.setState(\n          {\n            id: json.id,\n            name: json.name,\n            inhabitants: json.inhabitants,\n            population: json.population,\n            garrisonId: json.garrison_id,\n            garrison: { ...garrison },\n          },\n          () =>\n            console.log(\n              \"returned from fetch in PlanetDetail: \",\n              this.state,\n              this.props\n            )\n        );\n      });\n  }\n\n  handleDelete = () => {\n    const configObject = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    fetch(PLANET_URL + this.props.match.url, configObject).then((resp) =>\n      this.setState({ redirect: true })\n    );\n  };\n\n  formatNumber = (number) => {\n    if (!number || Number.isNaN(number)) {\n      return number;\n    }\n    const numberArry = parseFloat(number).toFixed(2).split(\".\");\n    numberArry[0] = numberArry[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return numberArry[0];\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/planets\" />;\n    } else {\n      return (\n        <div id=\"planet-detail-container\">\n          <h2 className=\"msgSuccess\">\n            {this.props.history.location.state\n              ? this.props.history.location.state.message\n              : \"\"}\n          </h2>\n          <h1>Planet {this.state.name}</h1>\n          <p>Inhabitants: {this.state.inhabitants}</p>\n          <p>Population: {this.formatNumber(this.state.population)}</p>\n          <p>Garrison Chapter: {this.state.garrison.chapter}</p>\n          <p>Garrison Size: {this.formatNumber(this.state.garrison.size)}</p>\n          <Link to={`/planets/${this.state.id}/edit`}>\n            <button id=\"updateBtn\">Modify Planet Details</button>\n          </Link>\n          <button id=\"deleteBtn\" onClick={this.handleDelete}>\n            Delete Planet\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class AddPlanet extends React.Component {\n  state = {\n    id: 0,\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: \"\",\n      },\n    ],\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ garrisonArray: [...json] });\n      });\n  }\n\n  createGarrisonSelect = () => {\n    return this.state.garrisonArray.map((garrison) => {\n      return (\n        <option key={garrison.id} value={garrison.id}>\n          {garrison.chapter}\n        </option>\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        inhabitants: this.state.inhabitants,\n        population: this.state.population,\n        garrison_id: this.state.garrisonId,\n      }),\n    };\n\n    fetch(PLANET_URL, configObject)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ id: json.id, redirect: true });\n      });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/planets/${this.state.id}`,\n            state: { message: \"Planet Successfully Created!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-planet-container\">\n          <h1>Add a Planet</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label for=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n\n            <label for=\"inhabitants\">Inhabitants:</label>\n            <input\n              type=\"text\"\n              list=\"inhabitant-list\"\n              name=\"inhabitants\"\n              onChange={this.handleChange}\n              value={this.state.inhabitants}\n            />\n            <datalist id=\"inhabitant-list\">\n              <option>Asharian</option>\n              <option>Eldar</option>\n              <option>Human</option>\n              <option>Ork</option>\n            </datalist>\n\n            <label for=\"population\">Population:</label>\n            <input\n              type=\"number\"\n              name=\"population\"\n              onChange={this.handleChange}\n              value={this.state.population}\n              step=\"1000\"\n            />\n\n            <label for=\"garrisonId\">Garrison:</label>\n            <select\n              name=\"garrisonId\"\n              onChange={this.handleChange}\n              value={this.state.garrisonId}\n              required\n            >\n              <option value=\"\" disabled defaultValue hidden>\n                Choose from list\n              </option>\n              {this.createGarrisonSelect()}\n            </select>\n\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class EditPlanet extends React.Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    inhabitants: \"\",\n    population: \"\",\n    garrisonId: \"\",\n    garrison: {\n      id: 0,\n      chapter: \"\",\n      size: 0,\n    },\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: \"\",\n      },\n    ],\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ garrisonArray: [...json] });\n      });\n\n    fetch(PLANET_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(json);\n        const garrison = {\n          id: json.garrison.id,\n          chapter: json.garrison.chapter,\n          size: json.garrison.size,\n        };\n        this.setState(\n          {\n            id: json.id,\n            name: json.name,\n            inhabitants: json.inhabitants,\n            population: json.population,\n            garrisonId: json.garrison_id,\n            garrison: { ...garrison },\n          },\n          () => console.log(\"returned from fetch in PlanetEDIT: \", this.state)\n        );\n      });\n  }\n\n  createGarrisonSelect = () => {\n    return this.state.garrisonArray.map((garrison) => {\n      return (\n        <option key={garrison.id} value={garrison.id}>\n          {garrison.chapter}\n        </option>\n      );\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        inhabitants: this.state.inhabitants,\n        population: this.state.population,\n        garrison_id: this.state.garrisonId,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(PLANET_URL + \"/planets/\" + this.state.id, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/planets/${this.state.id}`,\n            state: { message: \"Planet Successfully Updated!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-planet-container\">\n          <h1>Modify Planet</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label for=\"name\">Name:</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n\n            <label for=\"inhabitants\">Inhabitants:</label>\n            <input\n              type=\"text\"\n              list=\"inhabitant-list\"\n              name=\"inhabitants\"\n              onChange={this.handleChange}\n              value={this.state.inhabitants}\n            />\n            <datalist id=\"inhabitant-list\">\n              <option>Asharian</option>\n              <option>Eldar</option>\n              <option>Human</option>\n              <option>Ork</option>\n            </datalist>\n\n            <label for=\"population\">Population:</label>\n            <input\n              type=\"number\"\n              name=\"population\"\n              onChange={this.handleChange}\n              value={this.state.population}\n              step=\"1000\"\n            />\n\n            <label for=\"garrisonId\">Garrison:</label>\n            <select\n              name=\"garrisonId\"\n              onChange={this.handleChange}\n              value={this.state.garrisonId}\n              required\n            >\n              <option value=\"\" disabled defaultValue hidden>\n                Choose from list\n              </option>\n              {this.createGarrisonSelect()}\n            </select>\n\n            <button type=\"submit\">Update</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport PlanetView from \"./PlanetView\";\nimport search from \"../../images/search.png\";\n\nconst SEARCH_URL =\n  \"http://52.53.150.109:8080/AdeptusAdministratum/empire?inhabitants=\";\n\nexport default class SearchPlanets extends React.Component {\n  state = {\n    result: false,\n    inhabitants: \"\",\n    planetArray: [],\n    garrisonArray: [\n      {\n        id: 0,\n        chapter: \"\",\n        size: 0,\n      },\n    ],\n  };\n\n  handleChange = (e) => {\n    this.setState({ result: false, inhabitants: e.target.value });\n  };\n\n  handleSearch = (e) => {\n    e.preventDefault();\n    fetch(SEARCH_URL + this.state.inhabitants)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ result: true, planetArray: [...json] });\n      });\n  };\n\n  render() {\n    return (\n      <div id=\"search-container\">\n        <div id=\"search-heading\">\n          <h2>Search Administratum for Inhabitants</h2>\n        </div>\n        <div id=\"search-form-container\">\n          <form onSubmit={this.handleSearch}>\n            <p>Enter Inhabitants:</p>\n            <input\n              onChange={this.handleChange}\n              name=\"inhabitants\"\n              value={this.state.inhabitants}\n              placeholder=\"Search Planets by Inhabitant\"\n            />\n            <button>Search</button>\n          </form>\n        </div>\n        <div id=\"search-image-container\">\n          <img src={search} alt=\"Search Image\" />\n        </div>\n        <div id=\"search-result-container\">\n          {this.state.result ? (\n            this.state.planetArray.length < 1 ? (\n              <p>No planets found with {this.state.inhabitants}s.</p>\n            ) : (\n              <PlanetView planetArray={this.state.planetArray} />\n            )\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst GarrisonList = (props) => {\n  // console.log(\"props in planet list component planets: \", props.planetArray[0]);\n  // console.log(\"props in planet list component garrisons: \", props.garrisonArray[0]);\n  // console.log(\"garrison test: \", props.garrisonArray.find(garrison => garrison.id === props.planetArray[0].garrison_id));\n\n  const formatNumber = (number) => {\n    if (!number || Number.isNaN(number)) {\n      return number;\n    }\n    const numberArry = parseFloat(number).toFixed(2).split(\".\");\n    numberArry[0] = numberArry[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return numberArry[0];\n  };\n\n  return (\n    <table className=\"planet-table\">\n      <thead>\n        <tr>\n          <th>Garrison ID</th>\n          <th>Chapter Name</th>\n          <th>Size</th>\n          <th>View Details</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.garrisonArray.map((garrison) => {\n          return (\n            <tr key={garrison.id}>\n              <td>{garrison.id}</td>\n              <td>{garrison.chapter}</td>\n              <td>{formatNumber(garrison.size)}</td>\n              <td>\n                <Link exact=\"true\" to={`/garrisons/${garrison.id}`}>\n                  Get Garrison Details\n                </Link>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default GarrisonList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import fetchPlanets from \"../actions/fetchPlanets\";\nimport GarrisonList from \"../components/garrison/GarrisonList\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class GarrisonContainer extends React.Component {\n  state = {\n    garrisonArray: [],\n  };\n\n  componentDidMount() {\n    fetch(GARRISON_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ garrisonArray: [...json] });\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"garrison-container\">\n        <h1>All Garrisons in the Administratum</h1>\n        <GarrisonList garrisonArray={this.state.garrisonArray} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport PlanetList from \"../planet/PlanetList\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst BASE_URL = `http://52.53.150.109:8080/AdeptusAdministratum`;\n\nexport default class GarrisonDetail extends React.Component {\n  state = {\n    id: 0,\n    chapter: \"\",\n    size: 0,\n    redirect: false,\n    planetArray: [\n      {\n        id: 0,\n        name: \"\",\n        inhabitants: \"\",\n        population: 0,\n        garrison_id: 0,\n      },\n    ],\n  };\n\n  componentDidMount() {\n    fetch(BASE_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState(\n          {\n            id: json.id,\n            chapter: json.chapter,\n            size: json.size,\n          },\n          () =>\n            console.log(\n              \"returned from fetch in GarrisonDetail: \",\n              this.state,\n              this.props\n            )\n        );\n      });\n\n    fetch(PLANET_URL)\n      .then((resp) => resp.json())\n      .then((json) => {\n        this.setState({ planetArray: [...json] }, () =>\n          console.log(\"returned array from fetch: \", this.state.planetArray)\n        );\n      });\n  }\n\n  handleDelete = () => {\n    const configObject = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    fetch(BASE_URL + this.props.match.url, configObject).then((resp) =>\n      this.setState({ redirect: true })\n    );\n  };\n\n  formatNumber = (number) => {\n    if (!number || Number.isNaN(number)) {\n      return number;\n    }\n    const numberArry = parseFloat(number).toFixed(2).split(\".\");\n    numberArry[0] = numberArry[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return numberArry[0];\n  };\n\n  sortedPlanetList = () => {\n    // First get only planets belonging to this garrison\n    const filteredPlanetArray = this.state.planetArray.filter((planet) => {\n      return planet.garrison_id === this.state.id;\n    });\n    // Second, sort and return table of planets\n    if (filteredPlanetArray.length < 1) {\n      return <p>Not Assigned to Any Planets</p>;\n    } else {\n      const sortedPlanetArray = filteredPlanetArray.sort((planetA, planetB) => {\n        if (planetA.name.toUpperCase() < planetB.name.toUpperCase()) {\n          return -1;\n        }\n        if (planetB.name.toUpperCase() < planetA.name.toUpperCase()) {\n          return 1;\n        }\n        return 0;\n      });\n      return <PlanetList planetArray={sortedPlanetArray} />;\n    }\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/garrisons\" />;\n    } else {\n      return (\n        <div id=\"garrison-detail-container\">\n          <h2 className=\"msgSuccess\">\n            {this.props.history.location.state\n              ? this.props.history.location.state.message\n              : \"\"}\n          </h2>\n          <h1>Garrison {this.state.chapter}</h1>\n          <p>Size: {this.formatNumber(this.state.size)}</p>\n          <div id=\"planet-container-in-garrison\">\n            <h2>All Planets with this Garrison</h2>\n            {this.sortedPlanetList()}\n          </div>\n          <Link to={`/garrisons/${this.state.id}/edit`}>\n            <button id=\"updateBtn\">Modify Garrison Details</button>\n          </Link>\n          <button id=\"deleteBtn\" onClick={this.handleDelete}>\n            Delete Garrison\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst PLANET_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/planets\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class AddGarrison extends React.Component {\n  state = {\n    id: 0,\n    chapter: \"\",\n    size: \"\",\n    redirect: false,\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    /// need to clear form after\n    // Add redirect\n    const configObject = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        chapter: this.state.chapter,\n        size: this.state.size,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(GARRISON_URL, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/garrisons/${this.state.id}`,\n            state: { message: \"Garrison Successfully Created!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-garrison-container\">\n          <h1>Add Garrison</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Chapter:\n              <input\n                type=\"text\"\n                name=\"chapter\"\n                onChange={this.handleChange}\n                value={this.state.chapter}\n              />\n            </label>\n            <label>\n              Size:\n              <input\n                type=\"number\"\n                name=\"size\"\n                onChange={this.handleChange}\n                value={this.state.size}\n                step=\"1000\"\n              />\n            </label>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst BASE_URL = \"http://52.53.150.109:8080/AdeptusAdministratum\";\nconst GARRISON_URL = \"http://52.53.150.109:8080/AdeptusAdministratum/garrisons\";\n\nexport default class EditGarrison extends React.Component {\n  state = {\n    id: \"\",\n    chapter: \"\",\n    size: \"\",\n    redirect: false,\n  };\n\n  componentDidMount() {\n    fetch(BASE_URL + this.props.match.url)\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(json);\n\n        this.setState(\n          {\n            id: json.id,\n            chapter: json.chapter,\n            size: json.size,\n          },\n          () => console.log(\"returned from fetch in GarrisonEDIT: \", this.state)\n        );\n      });\n  }\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const configObject = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        chapter: this.state.chapter,\n        size: this.state.size,\n      }),\n    };\n    console.log(configObject);\n\n    fetch(BASE_URL + \"/garrisons/\" + this.state.id, configObject)\n      .then((resp) => resp.json())\n      .then((json) => this.setState({ id: json.id, redirect: true }));\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: `/garrisons/${this.state.id}`,\n            state: { message: \"Garrison Successfully Updated!\" },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div id=\"add-garrison-container\">\n          <h1>Modify Garrison</h1>\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Chapter:\n              <input\n                type=\"text\"\n                name=\"chapter\"\n                onChange={this.handleChange}\n                value={this.state.chapter}\n              />\n            </label>\n            <label>\n              Size:\n              <input\n                type=\"number\"\n                name=\"size\"\n                onChange={this.handleChange}\n                value={this.state.size}\n                step=\"1000\"\n              />\n            </label>\n            <button type=\"submit\">Update</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\n\nexport default class FooterContainer extends React.Component {\n\n    render() {\n        return(\n            <div id=\"footer-container\">\n            <a href='https://pngtree.com/free-backgrounds'>free background photos frompngtree.com</a>\n            </div>\n        )\n    }\n}","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBarContainer from \"./containers/NavBarContainer.js\";\nimport Login from \"./components/user/Login\";\nimport Logout from \"./components/user/Logout\";\nimport Home from \"./components/Home\";\nimport PlanetContainer from \"./containers/PlanetContainer\";\nimport PlanetDetail from \"./components/planet/PlanetDetail\";\nimport AddPlanet from \"./components/planet/AddPlanet\";\nimport EditPlanet from \"./components/planet/EditPlanet\";\nimport SearchPlanets from \"./components/planet/SearchPlanets\";\nimport GarrisonContainer from \"./containers/GarrisonContainer\";\nimport GarrisonDetail from \"./components/garrison/GarrisonDetail\";\nimport AddGarrison from \"./components/garrison/AddGarrison\";\nimport EditGarrison from \"./components/garrison/EditGarrison\";\nimport FooterContainer from \"./containers/FooterContainer\";\n\nclass App extends React.Component {\n  state = {\n    login: false,\n  };\n\n  updateUser = (loginBoolean) => {\n    this.setState({ login: loginBoolean });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div id=\"nav-div\">\n            <NavBarContainer login={this.state.login} />\n          </div>\n          <div className=\"app-div\">\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={(routerProps) => <Home {...routerProps} />}\n              />\n              <Route exact path=\"/planets\" component={PlanetContainer} />\n              <Route exact path=\"/planets/new\" component={AddPlanet} />\n              <Route\n                exact\n                path=\"/planets/:id/edit\"\n                render={(routerProps) => <EditPlanet {...routerProps} />}\n              />\n              <Route exact path=\"/planets/search\" component={SearchPlanets} />\n              <Route\n                exact\n                path=\"/planets/:id\"\n                render={(routerProps) => <PlanetDetail {...routerProps} />}\n              />\n              <Route exact path=\"/garrisons\" component={GarrisonContainer} />\n              <Route exact path=\"/garrisons/new\" component={AddGarrison} />\n              <Route\n                exact\n                path=\"/garrisons/:id/edit\"\n                render={(routerProps) => <EditGarrison {...routerProps} />}\n              />\n              <Route\n                exact\n                path=\"/garrisons/:id\"\n                render={(routerProps) => <GarrisonDetail {...routerProps} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={(routerProps) => (\n                  <Login {...routerProps} returnLogin={this.updateUser} />\n                )}\n              />\n              <Route\n                exact\n                path=\"/logout\"\n                render={(routerProps) => (\n                  <Logout {...routerProps} returnLogout={this.updateUser} />\n                )}\n              />\n            </Switch>\n          </div>\n          <div>\n            <FooterContainer />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}